<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>me.concision.unnamed</groupId>
        <artifactId>unpacker-toolchain</artifactId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>

    <groupId>me.concision.unnamed.unpacker</groupId>
    <artifactId>cli</artifactId>
    <version>2.0.0-SNAPSHOT</version>

    <packaging>jar</packaging>

    <name>Unpacker CLI</name>
    <description>A command-line application that automates the data extraction process for humans and upstream applications</description>

    <properties>
        <artifact.name>unpacker</artifact.name>
    </properties>

    <dependencies>
        <!-- Unpacker I/O API: Manipulate package streams -->
        <dependency>
            <groupId>me.concision.unnamed.unpacker</groupId>
            <artifactId>api</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- Argparse4J: Command line argument parsing -->
        <dependency>
            <groupId>net.sourceforge.argparse4j</groupId>
            <artifactId>argparse4j</artifactId>
            <version>0.8.1</version>
            <scope>compile</scope>
        </dependency>
        <!-- HTTPClient: Performing HTTP requests -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.12</version>
            <scope>compile</scope>
        </dependency>
        <!-- compress: wrapped LZMA compression API -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.20</version>
            <scope>compile</scope>
        </dependency>
        <!-- xz: underlying LZMA decompression implementation -->
        <dependency>
            <groupId>org.tukaani</groupId>
            <artifactId>xz</artifactId>
            <version>1.8</version>
            <scope>compile</scope>
        </dependency>
        <!-- JNA: Win32 API Support -->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>5.6.0</version>
            <scope>compile</scope>
        </dependency>
        <!-- PECOFF4J: Parsing Windows PE file formats -->
        <dependency>
            <groupId>com.kichik.pecoff4j</groupId>
            <artifactId>pecoff4j</artifactId>
            <version>0.3.1</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- configure maven plugin versions -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.akathist.maven.plugins.launch4j</groupId>
                    <artifactId>launch4j-maven-plugin</artifactId>
                    <version>1.7.25</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <!-- build configuration -->
        <plugins>
            <!-- indicates to IDEs that src/main/java9 is a source directory; no-op execution -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>none</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/main/java9</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- compile multi-release JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <!-- indicates to IDEs that the default language level is Java 9 -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <release>9</release>
                        </configuration>
                    </execution>
                    <!-- compile sources for Java 8 -->
                    <execution>
                        <id>java-8-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <release>8</release>
                        </configuration>
                    </execution>
                    <!-- compile module-info for Java 9, stored under META-INF/versions/9/module-info.class -->
                    <execution>
                        <id>java-9-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <release>9</release>
                            <multiReleaseOutput>true</multiReleaseOutput>
                            <compileSourceRoots>
                                <compileSourceRoot>${project.basedir}/src/main/java9</compileSourceRoot>
                            </compileSourceRoots>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                            </annotationProcessorPaths>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- shade dependencies into uber JAR; mark artifact as a multi-release JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${artifact.name}</finalName>
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <minimizeJar>true</minimizeJar>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <!-- mark artifact as a multi-release JAR -->
                                        <Multi-Release>true</Multi-Release>
                                        <!-- specify entrypoint -->
                                        <Main-Class>me.concision.unnamed.unpacker.cli.UnpackerCmd</Main-Class>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                            <filters>
                                <!-- required by httpclient -->
                                <filter>
                                    <artifact>commons-logging:*</artifact>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                </filter>
                                <!-- filter various other resources -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <!-- exclude miscellaneous files-->
                                        <exclude>**/META-INF/*</exclude>
                                        <exclude>**/mozilla/**/*</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- add back multi-release classes into JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- property must be passed into ant's runtime -->
                                <property name="artifact.name" value="${artifact.name}"/>
                                <zip
                                        basedir="${project.build.directory}/classes"
                                        includes="META-INF/versions/**/*"
                                        destfile="${project.build.directory}/${artifact.name}.jar"
                                        update="true"
                                />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- skip Windows executable generator during Docker builds -->
        <profile>
            <id>non-docker</id>
            <activation>
                <!-- activate if DOCKER environment variable is NOT true -->
                <property>
                    <name>env.DOCKER</name>
                    <value>!true</value>
                </property>
            </activation>
            <!-- build configuration -->
            <build>
                <plugins>
                    <!-- build Windows executable -->
                    <plugin>
                        <groupId>com.akathist.maven.plugins.launch4j</groupId>
                        <artifactId>launch4j-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>launch4j</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>launch4j</goal>
                                </goals>
                                <configuration>
                                    <jar>${project.build.directory}/${artifact.name}.jar</jar>
                                    <outfile>${project.build.directory}/${artifact.name}.exe</outfile>
                                    <icon>launch4j.ico</icon>
                                    <versionInfo>
                                        <originalFilename>${artifact.name}.exe</originalFilename>
                                        <fileVersion>${windows.version}</fileVersion>
                                        <txtFileVersion>${project.version}</txtFileVersion>
                                        <fileDescription>${project.description}</fileDescription>
                                        <companyName>None</companyName>
                                        <copyright>None</copyright>
                                        <productVersion>${windows.version}</productVersion>
                                        <txtProductVersion>${project.version}</txtProductVersion>
                                        <productName>${project.name}</productName>
                                        <internalName>${project.name}</internalName>
                                        <language>ENGLISH_US</language>
                                    </versionInfo>
                                    <classPath>
                                        <mainClass>me.concision.unnamed.unpacker.cli.UnpackerCmd</mainClass>
                                        <!-- dependencies are already shaded, prevent leaking dependency info -->
                                        <addDependencies>false</addDependencies>
                                    </classPath>
                                    <!-- JRE 8 required -->
                                    <jre>
                                        <minVersion>1.8.0</minVersion>
                                    </jre>
                                    <headerType>console</headerType>
                                    <errTitle>${project.name}</errTitle>
                                    <messages>
                                        <startupErr>An error occurred while bootstrapping ${project.parent.name}</startupErr>
                                        <jreVersionErr>JRE 1.8 or higher is required</jreVersionErr>
                                        <launcherErr>An exception occurred with Launch4j</launcherErr>
                                    </messages>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>